{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@market-bot/*": ["src/market-bot/*"],
      "@web/*": ["src/web/*"],
      "@modules/*": ["src/modules/*"],
      "@shared/*": ["src/shared/*"],
      "@/*": ["src/*"],
    },

    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Language and Environment */
    "target": "es2021" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": [
      "ES2021",
    ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "types": [
      "node",
      "jest",
    ],
    /* Modules */
    "module": "commonjs" /* Specify what module code is generated. */,
    "moduleResolution": "node",
    "rootDir": "./src" /* Specify the root folder within your source files. */,
    "resolveJsonModule": true /* Enable importing .json files */,

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
    // "checkJs": true,                                     /* Enable error reporting in type-checked JavaScript files. */
    "skipLibCheck": true,
    /* Emit */
    "outDir": "./build" /* Specify an output folder for all emitted files. */,
    "newLine": "lf" /* Set the newline character for emitting files. */,

    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": false /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
    "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
    "strictPropertyInitialization": true,
    // "noUnusedLocals": true,                           /* Enable error reporting when a local variables aren't read. */
    // "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read */
    "isolatedModules": true,

    "jsx": "react",
    "jsxFactory": "Html.createElement",
    "jsxFragmentFactory": "Html.Fragment",
    "plugins": [{ "name": "@kitajs/ts-html-plugin" }]
  },
  "include": ["./src/**/*"],
  "exclude": [
    "./build/**/*",
    "./scripts/**/*",
  ]
}
